@{Layout = null;}

@model MyAZHRM.Models.RegisterModel

@*@{
    ViewBag.Title = "Registration";
}*@


<head>

    <title>Registration</title>

    @Styles.Render("~/CustomCSS/bootstrap.min.css", "~/CustomCSS/font-awesome.css", "~/CustomCSS/toastr.min.css", "~/CustomCSS/jquery.gritter.css", "~/CustomCSS/animate.css", "~/CustomCSS/style.css", "~/CustomCSS/AutocompleteCSS.css")

    <style>
        ul 
        {
            list-style-type: none;
            /*color: indianred;*/
            /*background-color: palevioletred;
        padding: 50px;*/
        }

        .input-validation-error {
            border: 1px solid red;
        }

        .ui-autocomplete {
            max-height: 200px;
            overflow-y: auto; /* prevent horizontal scrollbar */
            overflow-x: hidden; /* add padding to account for vertical scrollbar */
            z-index: 1000 !important;
            width: 19% !important;
        }

        .field-icon {
            float: right;
            margin-left: -25px;
            margin-right: 5px;
            margin-top: -25px;
            position: relative;
            z-index: 2;
        }
    </style>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/sweetalert/1.1.3/sweetalert.min.js"></script>
</head>


    <body style="background-color: #f3f3f4;">
    <div>
        @*<hgroup class="title">
                <h1>@ViewBag.Title.</h1>
                <h2>Create a new account.</h2>
            </hgroup>*@

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <br />
            
            @*@Html.TextBoxFor(m => m.Message, htmlAttributes: new { style = "display: none;"})*@ 

            <div class="middle-box loginscreen animated fadeInDown" style="background-color:white; padding-left: 20px; padding-right: 20px; padding-top:0px;">
                <fieldset>
                    <h2 class="text-center font-bold">Registration Form</h2>
                    <div class="alert-danger" id="errout" style="padding:10px; border-radius:5px; display:none;">
                        @Html.ValidationMessage("exception", new { @class = "alert-danger", style = "width:100%; padding:10px;", @id = "valException" })
                    </div>

                    <br/>         
                    <div class="form-group">
                        @*@Html.LabelFor(m => m.UserName)*@
                        @Html.TextBoxFor(m => m.UserName, htmlAttributes: new { @class = "form-control", @placeholder = "Full Name" })
                        <small>@Html.ValidationMessageFor(m => m.UserName, "", new { style = "color: #950202; text-align: left;", @id = "valMsgName"})</small>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.Email)*@
                        @Html.TextBoxFor(m => m.Email, htmlAttributes: new { @class = "form-control", @placeholder = "Email" })
                        <small>@Html.ValidationMessageFor(m => m.Email, "", new { style = "color: #950202; text-align: left;", @id = "valMsgEmail" })</small>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.Telephone)*@
                        @Html.TextBoxFor(m => m.Telephone, htmlAttributes: new { @class = "form-control", @placeholder = "Telephone" })
                        <small>@Html.ValidationMessageFor(m => m.Telephone, "", new { style = "color: #950202; text-align: left;", @id = "valMsgTelephone" })</small>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.CompanyName)*@
                        @Html.TextBoxFor(m => m.CompanyAddress, htmlAttributes: new { @class = "form-control", @placeholder = "Company Address" })
                        <small>@Html.ValidationMessageFor(m => m.CompanyAddress, "", new { style = "color: #950202; text-align: left;", @id = "valMsgAddress" })</small>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.Country)*@
                        @*@Html.DropDownListFor(model => model.Country, ViewBag.CountryList as SelectList, new { @class = "form-control"})*@
                        @Html.TextBoxFor(model => model.Country, htmlAttributes: new { @class = "form-control", @placeholder = "Country" })
                        <small>@Html.ValidationMessageFor(m => m.Country, "", new { style = "color: #950202; text-align: left;", @id = "valMsgCountry" })</small>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.Currency)*@
                        @Html.TextBoxFor(model => model.Currency, htmlAttributes: new { @class = "form-control", @placeholder = "Currency" })
                        <small>@Html.ValidationMessageFor(m => m.Currency, "", new { style = "color: #950202; text-align: left;", @id = "valMsgCurrency" })</small>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.Password)*@
                        @Html.PasswordFor(m => m.Password, htmlAttributes: new { @class = "form-control", @placeholder = "Password"})
                        <span class="password-showhide">
                            <span class="fa fa-fw fa-eye field-icon show-password"></span>
                            <span class="fa fa-fw fa-eye-slash field-icon hide-password" style="display:none"></span>
                        </span>
                        <small>@Html.ValidationMessageFor(m => m.Password, "", new { style = "color: #950202; text-align: left;", @id = "valMsgPassword" })</small>
                    </div>

                    <div class="form-group">
                        @*@Html.LabelFor(m => m.ConfirmPassword)*@
                        @Html.PasswordFor(m => m.ConfirmPassword, htmlAttributes: new {@class = "form-control", @placeholder = "Confirm Password"})
                        <span class="password-showhide">
                            <span class="fa fa-fw fa-eye field-icon show-password"></span>
                            <span class="fa fa-fw fa-eye-slash field-icon hide-password" style="display:none"></span>
                        </span>
                        <small>@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { style = "color: #950202; text-align: left;", @id = "valMsgConfPassword" })</small>
                    </div>

                    <div class="form-group">
                        <div class="checkbox i-checks">
                            <label> @Html.CheckBoxFor(m => m.isAgree)<i>&nbsp;</i> I agree to the terms and conditions </label><br />
                            <small>@Html.ValidationMessageFor(m => m.isAgree, "", new { style = "color: #950202; text-align: left;", @id = "valMsgCBox" })</small>
                        </div>
                    </div>
                    <input class="btn btn-primary block full-width m-b" type="submit" value="Register" />
                </fieldset>
            </div>
        }
    </div>
</body>




    @*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
 
    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="https://code.jquery.com/ui/1.11.4/jquery-ui.js"></script>



    <script type="text/javascript">
    if (window.history.replaceState) {
        window.history.replaceState(null, null, window.location.href);
    }
    var errbox = $("#valException").html().length;
    if(errbox > 0){
        $("#errout").show();
    }
    else {
        $("#errout").hide();
    }

    $(document).ready(function () {
        $("#Country").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Account/RegisterCountryList",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item, value: item };
                        }))
                    },
                    error: function (data) {
                        console.log(data.error)
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });

        $("#Currency").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Account/RegisterCurrencyList",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item, value: item };
                        }))
                    },
                    error: function (data) {
                        console.log(data.error)
                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });

        //showhide password
        $(".show-password, .hide-password").on('click', function () {
            var passwordId = $(this).parents('div:first').find('input').attr('id');
            if ($(this).hasClass('show-password')) {
                $("#" + passwordId).attr("type", "text");
                $(this).parent().find(".show-password").hide();
                $(this).parent().find(".hide-password").show();
            } else {
                $("#" + passwordId).attr("type", "password");
                $(this).parent().find(".hide-password").hide();
                $(this).parent().find(".show-password").show();
            }
        });

        //var message = $("#Message").val();
        //if (message == "Success")
        //{
        //    var successMsg = "Registered Successfully"
        //    swal("Success", successMsg, "success");
        //    setTimeout(function () {
        //        window.location.replace("/");
        //    }, 3000);
        //}

        var returnCode = '@Session["ReturnCode"]';

        if (returnCode != '' && returnCode != null) {

            var errorMsg = '@Session["ErrorMsg"]';

            if (returnCode == "Success") {
                var successMsg = "Registered Successfully";
                swal("Success", successMsg, "success");
                setTimeout(function () {
                    window.location.replace("/");
                }, 3000);
            }
            else {
                swal("Error", errorMsg, "error");
            }
        }

        //var message = $("#Message").val();
        //if (message == "Success") {
        //    var successMsg = "Registered Successfully"
        //    swal("Success", successMsg, "success");
        //    setTimeout(function () {
        //        window.location.replace("/");
        //    }, 3000);
        //}

        var Country = $("#Country").val
        var Currency = $("#Currency").val


    })

        $("#UserName").on("keyup", function ()
        {
            validateUserName();
        });

        $("#Email").on("keyup", function ()
        {
            validateEmail();
        });

        $("#Telephone").on("keyup", function ()
        {
            validateTelephone();
        });

        $("#CompanyAddress").on("keyup", function ()
        {
            validateAddress();
        });

        $("#Country").on("keyup", function ()
        {
            validateCountry();
        });

        $("#Country").on("change", function ()
        {
            validateCountry();
        });

        $("#Currency").on("keyup", function ()
        {
            validateCurrency();
        });

        $("#Currency").on("change", function ()
        {
            validateCurrency();
        });

        $("#Password").on("keyup", function ()
        {
            validatePassword();
        });

        $("#ConfirmPassword").on("keyup", function ()
        {
            validateConfPassword();
        });

        $('#isAgree').change(function () {
            if (this.checked) {
                $("#valMsgCBox").html("");
            }
            else
            {
                $("#valMsgCBox").html("You must accept the terms and conditions");
            }
        });

        function validateUserName() {
            var nameCtrl = $("#UserName");
            var name = $("#UserName").val();
            var pass = true;

            nameCtrl.parent().removeClass('has-error');
            nameCtrl.parent().removeClass('has-success');
            nameCtrl.parent().find("small").remove();

            if (name.length == 0)
            {
                nameCtrl.parent().addClass('has-error');
                nameCtrl.parent().append('<small class="help-block" style="color: red;">Full Name is required</small>');
                pass = false;
            }
            else if (name.length >= 6)
            {
                nameCtrl.parent().addClass('has-success');
                nameCtrl.prop('disabled', false);
            }
            else {
                nameCtrl.parent().addClass('has-error');
                nameCtrl.parent().append('<small class="help-block" style="color: red;">Full Name must be atleast 6 characters long</small>');
                pass = false;
            }
            return pass;
        }

        function validateEmail()
        {
            var emailCtrl = $("#Email");
            var email = $("#Email").val();
            var pass = true;

            emailCtrl.parent().removeClass('has-error');
            emailCtrl.parent().removeClass('has-success');
            emailCtrl.parent().find("small").remove();

            if (email.length == 0)
            {
                emailCtrl.parent().addClass('has-error');
                emailCtrl.parent().append('<small class="help-block" style="color: red;">Email is required</small>');
                pass = false;
            }
            else if (/^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(email))
            {
                emailCtrl.parent().addClass('has-success');
                emailCtrl.prop('disabled', false);
            }
            else
            {
                emailCtrl.parent().addClass('has-error');
                emailCtrl.parent().append('<small class="help-block" style="color: red;">Invalid Email</small>');
                pass = false;
            }
        }

        //function validateTelephone() {
        //    var phoneCtrl = $("#Telephone");
        //    var telephone = $("#Telephone").val();
        //    var pass = true;

        //    phoneCtrl.parent().removeClass('has-error');
        //    phoneCtrl.parent().removeClass('has-success');
        //    phoneCtrl.parent().find("small").remove();

        //    if (telephone.length == 0) {
        //        phoneCtrl.parent().addClass('has-error');
        //        phoneCtrl.parent().append('<small class="help-block" style="color: red;">Phone Number is required</small>');
        //        pass = false;
        //    }
        //    else if (/^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/im.test(telephone)) {
        //        cmpNameCntrl.parent().addClass('has-success');
        //        cmpNameCntrl.prop('disabled', false);
        //    }
        //    else {
        //        phoneCtrl.parent().addClass('has-error');
        //        phoneCtrl.parent().append('<small class="help-block" style="color: red;">Invalid Phone Number</small>');
        //        pass = false;
        //    }
        //    return pass;
        //}
        function validateTelephone() {
            var isValid = false;
            var telCntrl = $("#Telephone");
            var telCntrlVal = telCntrl.val();

            telCntrl.parent().removeClass('has-error');
            telCntrl.parent().removeClass('has-success');
            telCntrl.parent().find("small").remove();

            if (telCntrlVal.length == 0) {
                telCntrl.parent().addClass('has-error');
                telCntrl.parent().append('<small class="help-block" style="color: red;">Phone Number is required</small>');
                isValid = false;
            }
            else {
                if (validatePhoneNumber(telCntrlVal) == true) {
                    telCntrl.parent().addClass('has-success');
                    isValid = true;
                }
                else {
                    telCntrl.parent().addClass('has-error');
                    telCntrl.parent().append('<small class="help-block" style="color: red;">Please enter numbers and only + - / ( ) characters</small>');
                    isValid = false;
                }
            }

            return isValid;
        }



        function validatePhoneNumber(phNo) {
            var phoneno = /^[+]*[(]{0,1}[0-9]{1,3}[)]{0,1}[-\s\./0-9]*$/g
            if (phNo.match(phoneno)) {
                return true;
            }
            else {
                return false;
            }
        }

        function validateAddress() {
            var isValid = false;
            var cmpNameCntrl = $("#CompanyAddress");
            var cmpNameVal = cmpNameCntrl.val();

            cmpNameCntrl.parent().removeClass('has-error');
            cmpNameCntrl.parent().removeClass('has-success');
            cmpNameCntrl.parent().find("small").remove();

            if (cmpNameVal == '') {
                cmpNameCntrl.parent().addClass('has-error');
                cmpNameCntrl.parent().append('<small class="help-block" style="color: red;">Address is required</small>');
                isValid = false;
            }
            else {
                cmpNameCntrl.parent().addClass('has-success');
                cmpNameCntrl.prop('disabled', false);
                isValid = true;
            }

            return isValid;
        }



        // 2023/Dec/07 
        //function validateCountry()
        //{
        //    var countryCtrl = $("#Country");
        //    var country = $("#Country").val();
        //    var pass = true;

        //    countryCtrl.parent().removeClass('has-error');
        //    countryCtrl.parent().removeClass('has-success');
        //    countryCtrl.parent().find("small").remove();

        //    if (country.length > 0) {
        //        countryCtrl.parent().addClass('has-success');
        //        countryCtrl.prop('disabled', false);
        //    }
        //    else {
        //        countryCtrl.parent().addClass('has-error');
        //        countryCtrl.parent().append('<small class="help-block" style="color: red;">Country is required</small>');
        //        pass = false;
        //    }
        //    return pass;
        //}

        // 2023/Dec/07 
        //function validateCurrency() {
        //    var currencyCtrl = $("#Currency");
        //    var currency = $("#Currency").val();
        //    var pass = true;

        //    currencyCtrl.parent().removeClass('has-error');
        //    currencyCtrl.parent().removeClass('has-success');
        //    currencyCtrl.parent().find("small").remove();

        //    if (currency.length > 0) {
        //        currencyCtrl.parent().addClass('has-success');
        //        currencyCtrl.prop('disabled', false);
        //    }
        //    else {
        //        currencyCtrl.parent().addClass('has-error');
        //        currencyCtrl.parent().append('<small class="help-block" style="color: red;">Currency is required</small>');
        //        pass = false;
        //    }
        //    return pass;
        //}

        // 2023/Dec/07 
        function validateCountry()
        {
            var isValid = false;
            var countryCntrl = $("#Country");
            var countryCntrlVal = countryCntrl.val();

            countryCntrl.parent().removeClass('has-error');
            countryCntrl.parent().removeClass('has-success');
            countryCntrl.parent().find("small").remove();

            if (countryCntrlVal.length == 0)
            {
                countryCntrl.parent().addClass('has-error');
                countryCntrl.parent().append('<small class="help-block" style="color: red;">Country is required</small>');
                isValid = false;
            }
            else
            {
                if (isValidCountry() == true)
                {
                    countryCntrl.parent().addClass('has-success');
                    isValid = true;
                }
                else
                {
                    countryCntrl.parent().addClass('has-error');
                    countryCntrl.parent().append('<small class="help-block" style="color: red;">Invalid Country</small>');
                    isValid = false;
                }

            }

            return isValid;
        }

        // 2023/Dec/07 
        function isValidCountry()
        {
            var isValid = false;
            var countryVal = $("#Country").val().trim();

            if (countryVal.length != 0 && countryVal != '')
            {
                var lstCountry = '@Html.Raw(Json.Encode(@HttpContext.Current.Session["CountryList"]))';
                if (lstCountry != null)
                {
                    var result = lstCountry.includes(countryVal);
                    if (result == true)
                    {
                        isValid = true;
                    }
                }
            }

            return isValid;
        }



        // 2023/Dec/07 
        function validateCurrency()
        {
            var isValid = false;
            var currencyCntrl = $("#Currency");
            var currencyCntrlVal = currencyCntrl.val();

            currencyCntrl.parent().removeClass('has-error');
            currencyCntrl.parent().removeClass('has-success');
            currencyCntrl.parent().find("small").remove();

            if (currencyCntrlVal.length == 0)
            {
                currencyCntrl.parent().addClass('has-error');
                currencyCntrl.parent().append('<small class="help-block" style="color: red;">Currency is required</small>');
                isValid = false;
            }
            else
            {
                if (isValidCurrency() == true)
                {
                    currencyCntrl.parent().addClass('has-success');
                    isValid = true;
                }
                else
                {
                    currencyCntrl.parent().addClass('has-error');
                    currencyCntrl.parent().append('<small class="help-block" style="color: red;">Invalid Currency</small>');
                    isValid = false;
                }

            }

            return isValid;
        }

        // 2023/Dec/07 
        function isValidCurrency()
        {
            var isValid = false;
            var currencyVal = $("#Currency").val().trim();

            if (currencyVal.length != 0 && currencyVal != '')
            {
                var lstCurrency = '@Html.Raw(Json.Encode(@HttpContext.Current.Session["CurrencyList"]))';
                if (lstCurrency != null)
                {
                    var result = lstCurrency.includes(currencyVal);
                    if (result == true)
                    {
                        isValid = true;
                    }
                }
            }

            return isValid;
        }



        function validatePassword() {
            var password = $("#Password").val();
            var passwordCtrl = $("#Password");
            var all_pass = true;

            var uppercase = password.match(/[A-Z]/);
            var regExp = password.match(/[_\-!\";,#.@@:]/);
            var number = password.match(/[0-9]/);

            passwordCtrl.parent().removeClass('has-error');
            passwordCtrl.parent().removeClass('has-success');
            passwordCtrl.parent().find("small").remove();

            if (password == "") {
                passwordCtrl.parent().addClass('has-error');
                passwordCtrl.parent().append('<small class="help-block" style="color: red;">Password is required</small>');
                all_pass = false;
            }
                //Length check
            else if (password.length < 6 || password.length > 20) {
                passwordCtrl.parent().addClass('has-error');
                passwordCtrl.parent().append('<small class="help-block" style="color: red;">Password Must be Between 6 and 20 Characters</small>');
                all_pass = false;
            }
                //Include a number
            else if (!number) {
                passwordCtrl.parent().addClass('has-error');
                passwordCtrl.parent().append('<small class="help-block" style="color: red;">Passwords Must Contain Numbers</small>');
                all_pass = false;
            }
                //upper lowercase 
            else if (!uppercase) {
                passwordCtrl.parent().addClass('has-error');
                passwordCtrl.parent().append('<small class="help-block" style="color: red;">Passwords Must Contain Upper Case Letters</small>');
                all_pass = false;
            }
                //Special chr
            else if (!regExp) {
                passwordCtrl.parent().addClass('has-error');
                passwordCtrl.parent().append('<small class="help-block" style="color: red;">Passwords Must Contain Special Characters</small>');
                all_pass = false;
            }

            if (all_pass) {
                passwordCtrl.parent().addClass('has-success');
                passwordCtrl.prop('disabled', false);
            }
            return all_pass
        }

        function validateConfPassword() {
            all_pass = true;
            var password = $("#Password").val();
            var confPassword = $("#ConfirmPassword").val();
            var confPwCtrl = $("#ConfirmPassword");

            confPwCtrl.parent().removeClass('has-error');
            confPwCtrl.parent().removeClass('has-success');
            confPwCtrl.parent().find("small").remove();

            if (confPassword.length == 0) {
                confPwCtrl.parent().addClass('has-error');
                confPwCtrl.parent().append('<small class="help-block" style="color: red;">Confirm Password is required</small>');
                all_pass = false;
            }
            else if (password != confPassword && password != '') {
                confPwCtrl.parent().addClass('has-error');
                confPwCtrl.parent().append('<small class="help-block" style="color: red;">Password and confirmation password do not match</small>');
                all_pass = false;
            }
            else {
                confPwCtrl.parent().addClass('has-success');
                confPwCtrl.prop('disabled', false);
            }

            return all_pass;
        }
    </script>
@if(Session["ReturnCode"] != null)
{
    Session["ErrorMsg"] = "";
    Session["ReturnCode"] = "";
}
